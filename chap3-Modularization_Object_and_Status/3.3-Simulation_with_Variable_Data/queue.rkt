#lang sicp
(define (debug x)
  (display x)
  (newline))
(define (front-ptr queue) (car queue))
(define (rear-ptr queue) (cdr queue))
(define (set-front-ptr! queue item)
  (set-car! queue item))
(define (set-rear-ptr! queue item)
  (set-cdr! queue item))

(define (make-queue)
  (cons '() '()))
(define (empty-queue? queue)
  (null? (front-ptr queue)))
(define (front-queue queue)
  (if (empty-queue? queue)
	(debug "Queue is empty -- FRONT-QUEUE")
	(car (front-ptr queue))))

(define (insert-queue! queue item)
  (let ((new-item (cons item '())))
	(if (empty-queue? queue)
	  (begin (set-front-ptr! queue new-item)
			 (set-rear-ptr! queue new-item)
			 queue)
	  (begin (set-cdr! (rear-ptr queue) new-item)
			 (set-rear-ptr! queue new-item)
			 queue))))

(define (delete-queue! queue item)
  (if (empty-queue? queue)
	(debug "Queue is empty -- DELETE-QUEUE")
	(begin (set-front-ptr! queue (cdr (front-ptr queue)))
		   queue)))
						   
(define q1 (make-queue))
(insert-queue! q1 'd)
